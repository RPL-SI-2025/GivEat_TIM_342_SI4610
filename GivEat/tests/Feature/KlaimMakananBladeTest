<?php

namespace Tests\Feature;

use Tests\TestCase;
use App\Models\User;
use App\Models\Donation;
use Illuminate\Foundation\Testing\RefreshDatabase;

class KlaimMakananBladeTest extends TestCase
{
    use RefreshDatabase;

    /**
     * Test halaman klaimmakanan menampilkan data donasi dengan benar.
     */
    public function test_klaimmakanan_page_displays_donation_data_correctly()
    {
        // Buat data dummy untuk donasi
        $donation = Donation::factory()->create([
            'food_name' => 'Nasi Goreng',
            'description' => 'Makanan enak dan bergizi',
            'quantity' => 10,
            'location' => 'https://maps.google.com',
        ]);

        // Akses halaman klaimmakanan
        $response = $this->get('/klaimmakanan/' . $donation->id);

        // Pastikan halaman dapat diakses
        $response->assertStatus(200);

        // Pastikan data donasi ditampilkan di halaman
        $response->assertSee('Nasi Goreng');
        $response->assertSee('Makanan enak dan bergizi');
        $response->assertSee('10 Porsi Tersedia');
        $response->assertSee('https://maps.google.com');
    }

    /**
     * Test modal ditampilkan jika session 'show_modal' tersedia.
     */
    public function test_modal_is_displayed_when_show_modal_session_is_set()
    {
        // Simulasikan session dengan data klaim
        $this->withSession([
            'show_modal' => true,
            'claim' => [
                'recipient' => [
                    'name' => 'John Doe',
                    'address' => 'Jl. Sukabirus',
                ],
                'donation' => [
                    'claim_date' => '2025-04-19',
                    'booking_code' => 'ABC12345',
                ],
            ],
        ]);

        // Buat data dummy untuk donasi
        $donation = Donation::factory()->create();

        // Akses halaman klaimmakanan
        $response = $this->get('/klaimmakanan/' . $donation->id);

        // Pastikan modal ditampilkan
        $response->assertSee('Bukti Pemesanan');
        $response->assertSee('John Doe');
        $response->assertSee('Jl. Sukabirus');
        $response->assertSee('2025-04-19');
        $response->assertSee('ABC12345');
    }

    /**
     * Test tombol "Ambil Makananmu" berfungsi dengan benar.
     */
    public function test_ambil_makanan_button_is_present_and_functional()
    {
        // Buat data dummy untuk donasi
        $donation = Donation::factory()->create();

        // Akses halaman klaimmakanan
        $response = $this->get('/klaimmakanan/' . $donation->id);

        // Pastikan tombol "Ambil Makananmu" ada di halaman
        $response->assertSee('Ambil Makananmu');

        // Simulasikan pengiriman form
        $user = User::factory()->create();
        $this->actingAs($user);

        $postResponse = $this->post('/claims', [
            'donation_id' => $donation->id,
        ]);

        // Pastikan klaim berhasil
        $postResponse->assertRedirect();
        $this->assertDatabaseHas('claims', [
            'donation_id' => $donation->id,
        ]);
    }

    /**
     * Test halaman menampilkan daftar testimoni dengan benar.
     */
    public function test_klaimmakanan_page_displays_testimonials_correctly()
    {
        // Buat data dummy untuk donasi
        $donation = Donation::factory()->create();

        // Akses halaman klaimmakanan
        $response = $this->get('/klaimmakanan/' . $donation->id);

        // Pastikan testimoni ditampilkan di halaman
        $response->assertSee('Hailey Williams');
        $response->assertSee('Makanannya sangat enak sekali, terimakasih semoga Tuhan membalas kebaikanmu');
        $response->assertSee('⭐⭐⭐⭐⭐');
    }

    /**
     * Test halaman menampilkan daftar makanan lainnya dengan benar.
     */
    public function test_klaimmakanan_page_displays_other_foods_correctly()
    {
        // Buat data dummy untuk donasi lainnya
        $donations = Donation::factory()->count(3)->create();

        // Akses halaman klaimmakanan
        $response = $this->get('/klaimmakanan/' . $donations->first()->id);

        // Pastikan daftar makanan lainnya ditampilkan
        foreach ($donations as $donation) {
            $response->assertSee($donation->food_name);
        }
    }
}